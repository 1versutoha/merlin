# 15 "src/kernel/preprocess/raw_lexer.mll"
 
open Std
open Misc
open Lexing
open Raw_parser

type keywords = (string, Raw_parser.token) Hashtbl.t

type error =
  | Illegal_character of char
  | Illegal_escape of string
  | Unterminated_comment of Location.t
  | Unterminated_string
  | Unterminated_string_in_comment of Location.t * Location.t
  | Keyword_as_label of string
  | Literal_overflow of string

(* Monad in which the lexer evaluates *)
type 'a result =
  | Return of 'a
  | Refill of (unit -> 'a result)
  | Error of error * Location.t

let return a = Return a

let error e l = Error (e,l)

let rec (>>=) (m : 'a result) (f : 'a -> 'b result) : 'b result =
  match m with
  | Return a -> f a
  | Refill u ->
    Refill (fun () -> u () >>= f)
  | Error _ as e -> e

type preprocessor = (Lexing.lexbuf -> Raw_parser.token) -> Lexing.lexbuf -> Raw_parser.token

type state = {
  keywords: keywords;
  buffer: Buffer.t;
  mutable string_start_loc: Location.t;
  mutable comment_start_loc: Location.t list;
  mutable preprocessor: preprocessor option;
}

let make ?preprocessor keywords = {
  keywords;
  buffer = Buffer.create 17;
  string_start_loc = Location.none;
  comment_start_loc = [];
  preprocessor;
}

let lABEL m = m >>= fun v -> return (LABEL v)
let oPTLABEL m = m >>= fun v -> return (OPTLABEL v)

let rec catch m f = match m with
  | Error (e,l) -> f e l
  | Refill next -> Refill (fun () -> catch (next ()) f)
  | Return _ -> m

(* The table of keywords *)

let keyword_table : keywords =
  create_hashtable 149 [
    "and", AND;
    "as", AS;
    "assert", ASSERT;
    "begin", BEGIN;
    "class", CLASS;
    "constraint", CONSTRAINT;
    "do", DO;
    "done", DONE;
    "downto", DOWNTO;
    "else", ELSE;
    "end", END;
    "exception", EXCEPTION;
    "external", EXTERNAL;
    "false", FALSE;
    "for", FOR;
    "fun", FUN;
    "function", FUNCTION;
    "functor", FUNCTOR;
    "if", IF;
    "in", IN;
    "include", INCLUDE;
    "inherit", INHERIT;
    "initializer", INITIALIZER;
    "lazy", LAZY;
    "let", LET;
    "match", MATCH;
    "method", METHOD;
    "module", MODULE;
    "mutable", MUTABLE;
    "new", NEW;
    "object", OBJECT;
    "of", OF;
    "open", OPEN;
    "or", OR;
(*  "parser", PARSER; *)
    "private", PRIVATE;
    "rec", REC;
    "sig", SIG;
    "struct", STRUCT;
    "then", THEN;
    "to", TO;
    "true", TRUE;
    "try", TRY;
    "type", TYPE;
    "val", VAL;
    "virtual", VIRTUAL;
    "when", WHEN;
    "while", WHILE;
    "with", WITH;

    "mod", INFIXOP3("mod");
    "land", INFIXOP3("land");
    "lor", INFIXOP3("lor");
    "lxor", INFIXOP3("lxor");
    "lsl", INFIXOP4("lsl");
    "lsr", INFIXOP4("lsr");
    "asr", INFIXOP4("asr");
]

let keywords l = create_hashtable 11 l

(* To store the position of the beginning of a string and comment *)
let in_comment state = state.comment_start_loc <> []
let in_string state = state.string_start_loc != Location.none

(* To translate escape sequences *)

let char_for_backslash = function
  | 'n' -> '\010'
  | 'r' -> '\013'
  | 'b' -> '\008'
  | 't' -> '\009'
  | c   -> c

let char_for_decimal_code state lexbuf i =
  let c = 100 * (Char.code(Lexing.lexeme_char lexbuf i) - 48) +
           10 * (Char.code(Lexing.lexeme_char lexbuf (i+1)) - 48) +
                (Char.code(Lexing.lexeme_char lexbuf (i+2)) - 48) in
  if (c < 0 || c > 255) then
    if in_comment state
    then return 'x'
    else error (Illegal_escape (Lexing.lexeme lexbuf))
               (Location.curr lexbuf)
  else return (Char.chr c)

let char_for_hexadecimal_code lexbuf i =
  let d1 = Char.code (Lexing.lexeme_char lexbuf i) in
  let val1 = if d1 >= 97 then d1 - 87
             else if d1 >= 65 then d1 - 55
             else d1 - 48
  in
  let d2 = Char.code (Lexing.lexeme_char lexbuf (i+1)) in
  let val2 = if d2 >= 97 then d2 - 87
             else if d2 >= 65 then d2 - 55
             else d2 - 48
  in
  Char.chr (val1 * 16 + val2)

(* To convert integer literals, allowing max_int + 1 (PR#4210) *)

let cvt_int_literal s =
  - int_of_string ("-" ^ s)
let cvt_int32_literal s =
  Int32.neg (Int32.of_string ("-" ^ String.sub s 0 (String.length s - 1)))
let cvt_int64_literal s =
  Int64.neg (Int64.of_string ("-" ^ String.sub s 0 (String.length s - 1)))
let cvt_nativeint_literal s =
  Nativeint.neg (Nativeint.of_string ("-" ^ String.sub s 0
                                                       (String.length s - 1)))

(* Remove underscores from float literals *)

let remove_underscores s =
  let l = String.length s in
  let rec remove src dst =
    if src >= l then
      if dst >= l then s else String.sub s 0 dst
    else
      match s.[src] with
        '_' -> remove (src + 1) dst
      |  c  -> s.[dst] <- c; remove (src + 1) (dst + 1)
  in remove 0 0

(* recover the name from a LABEL or OPTLABEL token *)

let get_label_name lexbuf =
  let s = Lexing.lexeme lexbuf in
  let name = String.sub s 1 (String.length s - 2) in
  if Hashtbl.mem keyword_table name then
    error (Keyword_as_label name) (Location.curr lexbuf)
  else
    return name
;;

(* Update the current location with file name and line number. *)

let update_loc lexbuf file line absolute chars =
  let pos = lexbuf.lex_curr_p in
  let new_file = match file with
                 | None -> pos.pos_fname
                 | Some s -> s
  in
  lexbuf.lex_curr_p <- { pos with
    pos_fname = new_file;
    pos_lnum = if absolute then line else pos.pos_lnum + line;
    pos_bol = pos.pos_cnum - chars;
  }
;;

(* Warn about Latin-1 characters used in idents *)

let warn_latin1 lexbuf =
  Location.prerr_warning (Location.curr lexbuf)
    (Warnings.Deprecated "ISO-Latin1 characters in identifiers")
;;

(* Error report *)

open Format

let report_error ppf = function
  | Illegal_character c ->
      fprintf ppf "Illegal character (%s)" (Char.escaped c)
  | Illegal_escape s ->
      fprintf ppf "Illegal backslash escape in string or character (%s)" s
  | Unterminated_comment _ ->
      fprintf ppf "Comment not terminated"
  | Unterminated_string ->
      fprintf ppf "String literal not terminated"
  | Unterminated_string_in_comment (_, loc) ->
      fprintf ppf "This comment contains an unterminated string literal@.\
                   %aString literal begins here"
              Location.print_error loc
  | Keyword_as_label kwd ->
      fprintf ppf "`%s' is a keyword, it cannot be used as label name" kwd
  | Literal_overflow ty ->
      fprintf ppf "Integer literal exceeds the range of representable \
                   integers of type %s" ty


# 247 "src/kernel/preprocess/raw_lexer.ml"
let __ocaml_lex_refill : (Lexing.lexbuf -> 'a) -> (Lexing.lexbuf -> 'a) =
# 286 "src/kernel/preprocess/raw_lexer.mll"
       (fun k lexbuf -> Refill (fun () -> k lexbuf))
# 251 "src/kernel/preprocess/raw_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\168\255\170\255\094\000\153\000\224\000\003\001\038\001\
    \073\001\192\255\108\001\145\001\200\255\141\000\182\001\217\001\
    \069\000\084\000\083\000\252\001\217\255\219\255\222\255\031\002\
    \003\001\066\002\091\000\213\001\117\002\237\255\085\002\194\002\
    \011\003\095\003\047\004\014\005\106\005\058\006\135\000\254\255\
    \001\000\005\000\255\255\006\000\007\000\025\007\055\007\007\008\
    \250\255\249\255\215\008\167\009\247\255\246\255\238\255\239\255\
    \240\255\120\000\096\002\086\000\118\002\170\003\122\004\133\006\
    \111\000\042\005\150\002\198\255\236\255\175\005\135\010\099\000\
    \104\000\011\000\235\255\234\255\230\255\147\006\193\003\109\000\
    \233\255\203\003\110\000\232\255\130\007\111\000\231\255\110\000\
    \228\255\135\010\227\255\121\008\141\005\226\255\012\000\016\000\
    \009\001\080\001\017\000\226\255\018\000\174\010\220\010\003\011\
    \038\011\214\255\210\255\211\255\212\255\208\255\130\011\222\011\
    \058\012\150\012\182\012\016\013\100\013\169\255\184\013\116\000\
    \097\000\201\255\202\255\203\255\098\000\186\255\188\255\195\255\
    \018\014\191\255\193\255\053\014\088\014\123\014\158\014\171\004\
    \243\255\244\255\169\000\245\255\027\002\203\005\253\255\123\000\
    \124\000\255\255\254\255\252\255\243\008\176\014\141\000\142\000\
    \184\000\251\255\250\255\249\255\091\008\225\003\144\000\248\255\
    \014\005\145\000\247\255\242\009\146\000\246\255\194\000\164\001\
    \247\255\248\255\249\255\199\000\249\014\255\255\250\255\055\011\
    \031\005\253\255\249\000\014\001\024\001\106\005\252\255\027\015\
    \251\255\034\001\163\001\252\255\025\009\254\255\255\255\059\001\
    \060\001\253\255\035\015\157\000\160\000\200\000\212\000\169\000\
    \249\000\173\000\013\000\255\255\214\000\252\255\253\255\201\000\
    \064\001\255\255\119\015\203\015\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\084\000\083\000\080\000\079\000\072\000\
    \070\000\255\255\061\000\058\000\255\255\051\000\050\000\048\000\
    \046\000\042\000\040\000\075\000\255\255\255\255\255\255\031\000\
    \030\000\037\000\035\000\034\000\056\000\255\255\013\000\013\000\
    \012\000\011\000\010\000\007\000\004\000\003\000\002\000\255\255\
    \087\000\087\000\255\255\255\255\255\255\078\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\014\000\255\255\255\255\255\255\013\000\013\000\
    \013\000\014\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\025\000\025\000\025\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\026\000\
    \255\255\082\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\032\000\081\000\076\000\
    \039\000\255\255\255\255\255\255\255\255\255\255\079\000\079\000\
    \079\000\049\000\255\255\079\000\255\255\255\255\255\255\066\000\
    \065\000\255\255\255\255\255\255\068\000\255\255\255\255\255\255\
    \059\000\255\255\255\255\077\000\071\000\074\000\073\000\255\255\
    \255\255\255\255\012\000\255\255\012\000\012\000\255\255\012\000\
    \012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\008\000\008\000\255\255\255\255\005\000\
    \005\000\255\255\001\000\005\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\003\000\255\255\255\255\003\000\
    \255\255\255\255\255\255\002\000\255\255\255\255\001\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\003\000\
    \003\000\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \255\255\255\255\255\255\071\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\255\255\076\000\255\255\
    \255\255\255\255\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \000\000\255\255\000\000\095\000\255\255\000\000\255\255\095\000\
    \096\000\095\000\098\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\136\000\
    \000\000\000\000\255\255\000\000\150\000\255\255\000\000\255\255\
    \255\255\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\000\000\255\255\168\000\
    \000\000\000\000\000\000\255\255\174\000\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\187\000\000\000\255\255\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\197\000\200\000\255\255\
    \200\000\255\255\255\255\000\000\205\000\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\038\000\039\000\039\000\038\000\040\000\044\000\042\000\
    \042\000\039\000\043\000\043\000\044\000\072\000\093\000\203\000\
    \073\000\094\000\093\000\099\000\099\000\094\000\100\000\100\000\
    \038\000\008\000\029\000\024\000\006\000\004\000\023\000\027\000\
    \026\000\021\000\025\000\007\000\020\000\019\000\018\000\003\000\
    \031\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\017\000\016\000\015\000\014\000\010\000\035\000\
    \005\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\013\000\041\000\012\000\005\000\037\000\
    \022\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\028\000\011\000\009\000\036\000\003\000\
    \109\000\105\000\003\000\003\000\003\000\087\000\064\000\064\000\
    \003\000\003\000\075\000\003\000\003\000\003\000\108\000\074\000\
    \038\000\107\000\106\000\038\000\080\000\083\000\086\000\088\000\
    \003\000\126\000\003\000\003\000\003\000\003\000\003\000\064\000\
    \064\000\124\000\125\000\066\000\146\000\066\000\145\000\038\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\119\000\137\000\155\000\154\000\166\000\159\000\
    \162\000\165\000\003\000\055\000\003\000\003\000\003\000\003\000\
    \196\000\197\000\151\000\003\000\003\000\152\000\003\000\003\000\
    \003\000\122\000\201\000\121\000\137\000\120\000\064\000\166\000\
    \202\000\170\000\198\000\003\000\185\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\056\000\003\000\054\000\199\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\003\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \002\000\005\000\178\000\199\000\005\000\005\000\005\000\212\000\
    \000\000\123\000\005\000\005\000\092\000\005\000\005\000\005\000\
    \255\255\255\255\208\000\093\000\207\000\003\000\094\000\003\000\
    \178\000\178\000\005\000\180\000\005\000\005\000\005\000\005\000\
    \005\000\000\000\178\000\092\000\006\000\180\000\000\000\006\000\
    \006\000\006\000\000\000\098\000\170\000\006\000\006\000\185\000\
    \006\000\006\000\006\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\006\000\005\000\006\000\
    \006\000\006\000\006\000\006\000\000\000\190\000\190\000\102\000\
    \192\000\192\000\102\000\102\000\102\000\000\000\000\000\000\000\
    \102\000\102\000\000\000\102\000\134\000\102\000\000\000\000\000\
    \000\000\097\000\093\000\000\000\005\000\094\000\005\000\000\000\
    \102\000\006\000\102\000\133\000\102\000\102\000\102\000\000\000\
    \000\000\000\000\131\000\000\000\000\000\131\000\131\000\131\000\
    \097\000\000\000\096\000\131\000\131\000\000\000\131\000\131\000\
    \131\000\000\000\211\000\000\000\209\000\000\000\000\000\006\000\
    \210\000\006\000\000\000\131\000\102\000\131\000\132\000\131\000\
    \131\000\131\000\000\000\000\000\000\000\006\000\000\000\000\000\
    \006\000\006\000\006\000\000\000\000\000\000\000\006\000\006\000\
    \000\000\006\000\006\000\006\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\102\000\000\000\102\000\000\000\006\000\131\000\
    \006\000\006\000\006\000\006\000\006\000\190\000\170\000\000\000\
    \191\000\171\000\006\000\000\000\000\000\006\000\006\000\006\000\
    \000\000\000\000\000\000\006\000\006\000\000\000\006\000\006\000\
    \006\000\000\000\000\000\000\000\000\000\131\000\173\000\131\000\
    \255\255\130\000\006\000\006\000\000\000\006\000\006\000\006\000\
    \006\000\006\000\000\000\000\000\255\255\000\000\206\000\006\000\
    \000\000\000\000\006\000\006\000\006\000\000\000\000\000\072\000\
    \006\000\006\000\073\000\006\000\006\000\006\000\000\000\000\000\
    \006\000\129\000\006\000\000\000\000\000\000\000\127\000\006\000\
    \006\000\000\000\006\000\006\000\006\000\006\000\006\000\000\000\
    \000\000\255\255\006\000\000\000\255\255\006\000\006\000\006\000\
    \172\000\000\000\000\000\006\000\006\000\000\000\113\000\006\000\
    \006\000\255\255\000\000\000\000\000\000\128\000\000\000\006\000\
    \000\000\000\000\000\000\112\000\006\000\110\000\006\000\006\000\
    \006\000\111\000\000\000\000\000\000\000\102\000\000\000\188\000\
    \102\000\102\000\102\000\000\000\000\000\151\000\102\000\102\000\
    \152\000\102\000\103\000\102\000\000\000\000\000\000\000\000\000\
    \000\000\070\000\006\000\000\000\006\000\000\000\102\000\006\000\
    \102\000\102\000\104\000\102\000\102\000\000\000\000\000\000\000\
    \006\000\000\000\153\000\006\000\006\000\101\000\000\000\000\000\
    \000\000\006\000\006\000\000\000\006\000\006\000\006\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\006\000\000\000\006\000\
    \000\000\006\000\102\000\006\000\006\000\006\000\006\000\006\000\
    \000\000\000\000\000\000\003\000\000\000\000\000\003\000\003\000\
    \003\000\000\000\000\000\090\000\089\000\003\000\000\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\149\000\
    \102\000\000\000\102\000\000\000\003\000\006\000\003\000\003\000\
    \003\000\003\000\003\000\058\000\000\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\000\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\057\000\006\000\000\000\006\000\000\000\000\000\
    \003\000\055\000\000\000\189\000\169\000\057\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\000\000\000\000\
    \000\000\067\000\000\000\000\000\030\000\000\000\000\000\000\000\
    \000\000\000\000\057\000\000\000\000\000\000\000\003\000\058\000\
    \003\000\056\000\000\000\054\000\000\000\057\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \000\000\000\000\000\000\000\000\069\000\255\255\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \058\000\068\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\059\000\000\000\000\000\057\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\055\000\000\000\
    \000\000\060\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\061\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\030\000\000\000\000\000\059\000\000\000\000\000\057\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\056\000\000\000\
    \054\000\060\000\032\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\061\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\000\000\000\000\
    \000\000\000\000\032\000\000\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\033\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\000\000\000\000\000\000\000\000\033\000\000\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\081\000\081\000\081\000\081\000\081\000\081\000\081\000\
    \081\000\081\000\081\000\082\000\082\000\082\000\082\000\082\000\
    \082\000\082\000\082\000\082\000\082\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\160\000\160\000\160\000\160\000\160\000\160\000\160\000\
    \160\000\160\000\160\000\000\000\000\000\000\000\000\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\000\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\034\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\000\000\000\000\000\000\000\000\034\000\000\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\000\000\137\000\000\000\000\000\
    \138\000\000\000\000\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\000\000\000\000\000\000\000\000\000\000\055\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\142\000\000\000\000\000\
    \000\000\000\000\140\000\144\000\000\000\143\000\000\000\000\000\
    \000\000\062\000\000\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\000\000\000\000\000\000\000\000\000\000\056\000\000\000\
    \054\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\000\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\141\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\045\000\
    \000\000\000\000\045\000\045\000\045\000\000\000\000\000\000\000\
    \045\000\045\000\000\000\045\000\045\000\045\000\161\000\161\000\
    \161\000\161\000\161\000\161\000\161\000\161\000\161\000\161\000\
    \045\000\000\000\045\000\045\000\045\000\045\000\045\000\181\000\
    \181\000\181\000\181\000\181\000\181\000\181\000\181\000\181\000\
    \181\000\000\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\045\000\051\000\000\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\065\000\045\000\045\000\045\000\000\000\045\000\045\000\
    \045\000\000\000\000\000\000\000\045\000\045\000\092\000\045\000\
    \045\000\045\000\182\000\182\000\182\000\182\000\182\000\182\000\
    \182\000\182\000\182\000\182\000\045\000\000\000\045\000\045\000\
    \045\000\045\000\045\000\139\000\000\000\092\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\000\000\
    \045\000\047\000\000\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\000\000\045\000\000\000\
    \045\000\000\000\000\000\000\000\000\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\000\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\069\000\000\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\148\000\068\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\000\000\147\000\
    \000\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\034\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\000\000\000\000\000\000\
    \000\000\034\000\000\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\084\000\084\000\084\000\084\000\084\000\
    \084\000\084\000\084\000\084\000\084\000\000\000\000\000\000\000\
    \000\000\055\000\000\000\000\000\084\000\084\000\084\000\084\000\
    \084\000\084\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\063\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\056\000\000\000\054\000\084\000\084\000\084\000\084\000\
    \084\000\084\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\000\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\000\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\045\000\000\000\000\000\045\000\045\000\045\000\
    \000\000\000\000\000\000\045\000\045\000\000\000\045\000\045\000\
    \045\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\045\000\000\000\045\000\045\000\045\000\
    \045\000\045\000\000\000\000\000\000\000\000\000\046\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\049\000\000\000\000\000\000\000\000\000\000\000\045\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\000\000\000\000\000\000\045\000\046\000\045\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\085\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\000\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\047\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\048\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\000\000\000\000\000\000\000\000\047\000\000\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\097\000\093\000\000\000\000\000\094\000\000\000\
    \000\000\000\000\000\000\163\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\163\000\163\000\163\000\000\000\000\000\000\000\
    \000\000\097\000\000\000\096\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\000\000\000\000\000\000\000\000\000\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\000\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\050\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\053\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\000\000\000\000\000\000\000\000\050\000\000\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\148\000\000\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\000\000\147\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \194\000\255\255\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\000\000\000\000\193\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\000\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\051\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\052\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\000\000\000\000\000\000\000\000\051\000\000\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\164\000\164\000\164\000\164\000\164\000\164\000\
    \164\000\164\000\164\000\164\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\164\000\164\000\164\000\164\000\164\000\
    \164\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\164\000\164\000\164\000\164\000\164\000\
    \164\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\000\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\000\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\079\000\
    \089\000\079\000\000\000\089\000\089\000\089\000\079\000\000\000\
    \000\000\089\000\089\000\000\000\089\000\089\000\089\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\078\000\078\000\
    \078\000\089\000\000\000\089\000\089\000\089\000\089\000\089\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\
    \000\000\000\000\006\000\006\000\006\000\000\000\000\000\000\000\
    \006\000\006\000\000\000\006\000\006\000\006\000\000\000\000\000\
    \000\000\000\000\000\000\079\000\000\000\089\000\000\000\000\000\
    \006\000\079\000\006\000\006\000\006\000\006\000\006\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\079\000\000\000\000\000\
    \000\000\079\000\000\000\079\000\000\000\102\000\000\000\077\000\
    \102\000\102\000\102\000\089\000\000\000\089\000\102\000\102\000\
    \000\000\102\000\102\000\102\000\006\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\102\000\000\000\
    \102\000\102\000\102\000\102\000\102\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\102\000\000\000\000\000\102\000\
    \102\000\102\000\006\000\000\000\006\000\102\000\102\000\000\000\
    \102\000\102\000\102\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\102\000\000\000\000\000\102\000\000\000\102\000\
    \102\000\102\000\102\000\102\000\000\000\000\000\000\000\102\000\
    \000\000\000\000\102\000\102\000\102\000\000\000\000\000\000\000\
    \102\000\102\000\000\000\102\000\102\000\102\000\000\000\000\000\
    \102\000\000\000\102\000\000\000\000\000\000\000\000\000\000\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\183\000\
    \183\000\183\000\183\000\183\000\183\000\183\000\183\000\183\000\
    \183\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \183\000\183\000\183\000\183\000\183\000\183\000\000\000\102\000\
    \000\000\102\000\000\000\000\000\102\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \183\000\183\000\183\000\183\000\183\000\183\000\000\000\000\000\
    \000\000\000\000\102\000\006\000\102\000\000\000\006\000\006\000\
    \006\000\117\000\000\000\000\000\006\000\006\000\000\000\006\000\
    \006\000\006\000\117\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\006\000\000\000\006\000\006\000\
    \006\000\006\000\006\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\000\000\000\000\000\000\
    \006\000\117\000\000\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\000\000\006\000\006\000\
    \006\000\000\000\006\000\006\000\006\000\118\000\000\000\000\000\
    \006\000\006\000\000\000\006\000\006\000\006\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \006\000\000\000\006\000\006\000\006\000\006\000\006\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\000\000\000\000\000\000\006\000\118\000\000\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\000\000\006\000\006\000\006\000\000\000\006\000\006\000\
    \006\000\114\000\000\000\000\000\006\000\006\000\000\000\006\000\
    \006\000\006\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\006\000\000\000\006\000\006\000\
    \006\000\006\000\115\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\000\000\000\000\000\000\
    \006\000\114\000\000\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\000\000\006\000\006\000\
    \006\000\000\000\006\000\006\000\006\000\000\000\000\000\000\000\
    \006\000\006\000\000\000\006\000\006\000\006\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \006\000\000\000\006\000\006\000\006\000\006\000\006\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\114\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \000\000\000\000\117\000\000\000\006\000\000\000\116\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\000\000\006\000\000\000\006\000\114\000\000\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\006\000\000\000\000\000\006\000\006\000\006\000\116\000\
    \000\000\000\000\006\000\006\000\000\000\006\000\006\000\006\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\006\000\000\000\006\000\006\000\006\000\006\000\
    \006\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\000\000\000\000\000\000\006\000\116\000\
    \000\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\006\000\000\000\006\000\000\000\
    \000\000\000\000\000\000\000\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\000\000\000\000\
    \117\000\000\000\000\000\000\000\000\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\000\000\
    \000\000\000\000\000\000\116\000\000\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\118\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\000\000\000\000\117\000\000\000\000\000\000\000\
    \000\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\000\000\000\000\000\000\000\000\118\000\
    \000\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\006\000\000\000\000\000\006\000\006\000\
    \006\000\000\000\000\000\000\000\006\000\006\000\000\000\006\000\
    \006\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\006\000\000\000\006\000\006\000\
    \006\000\006\000\006\000\000\000\000\000\000\000\131\000\000\000\
    \000\000\131\000\131\000\131\000\000\000\000\000\000\000\131\000\
    \131\000\000\000\131\000\131\000\131\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\131\000\
    \006\000\131\000\131\000\131\000\131\000\131\000\000\000\000\000\
    \000\000\131\000\000\000\000\000\131\000\131\000\131\000\000\000\
    \000\000\000\000\131\000\131\000\000\000\131\000\131\000\131\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\
    \006\000\000\000\131\000\131\000\131\000\131\000\131\000\131\000\
    \131\000\000\000\000\000\000\000\102\000\000\000\000\000\102\000\
    \102\000\102\000\000\000\000\000\000\000\102\000\102\000\000\000\
    \102\000\102\000\102\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\131\000\000\000\131\000\000\000\102\000\131\000\102\000\
    \102\000\102\000\102\000\102\000\000\000\000\000\000\000\102\000\
    \000\000\000\000\102\000\102\000\102\000\000\000\000\000\000\000\
    \102\000\102\000\000\000\102\000\102\000\102\000\000\000\000\000\
    \158\000\000\000\158\000\000\000\131\000\000\000\131\000\158\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\000\000\
    \157\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\102\000\
    \000\000\102\000\000\000\000\000\102\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\178\000\000\000\000\000\179\000\000\000\
    \000\000\000\000\000\000\000\000\158\000\000\000\000\000\000\000\
    \000\000\000\000\158\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\177\000\102\000\177\000\102\000\000\000\158\000\000\000\
    \177\000\000\000\158\000\000\000\158\000\000\000\000\000\000\000\
    \156\000\176\000\176\000\176\000\176\000\176\000\176\000\176\000\
    \176\000\176\000\176\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\184\000\184\000\184\000\184\000\184\000\
    \184\000\184\000\184\000\184\000\184\000\177\000\000\000\000\000\
    \000\000\000\000\000\000\177\000\184\000\184\000\184\000\184\000\
    \184\000\184\000\000\000\000\000\000\000\000\000\000\000\177\000\
    \000\000\000\000\000\000\177\000\000\000\177\000\000\000\000\000\
    \000\000\175\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\184\000\184\000\184\000\184\000\
    \184\000\184\000\194\000\000\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\210\000\000\000\
    \193\000\000\000\000\000\000\000\000\000\000\000\000\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\000\000\000\000\209\000\000\000\000\000\000\000\000\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\000\000\000\000\000\000\000\000\210\000\000\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\211\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\000\000\000\000\209\000\
    \000\000\000\000\000\000\210\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\000\000\000\000\
    \000\000\000\000\211\000\000\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\040\000\000\000\000\000\040\000\041\000\
    \043\000\044\000\041\000\043\000\044\000\073\000\094\000\202\000\
    \073\000\094\000\095\000\098\000\100\000\095\000\098\000\100\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \016\000\018\000\003\000\003\000\003\000\026\000\059\000\059\000\
    \003\000\003\000\071\000\003\000\003\000\003\000\017\000\072\000\
    \038\000\017\000\017\000\038\000\079\000\082\000\085\000\087\000\
    \003\000\119\000\003\000\003\000\003\000\003\000\003\000\064\000\
    \064\000\120\000\124\000\057\000\143\000\057\000\144\000\038\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\013\000\138\000\150\000\151\000\138\000\158\000\
    \161\000\164\000\004\000\064\000\003\000\004\000\004\000\004\000\
    \195\000\196\000\152\000\004\000\004\000\152\000\004\000\004\000\
    \004\000\013\000\199\000\013\000\166\000\013\000\064\000\166\000\
    \201\000\171\000\197\000\004\000\171\000\004\000\004\000\004\000\
    \004\000\004\000\003\000\064\000\003\000\064\000\198\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\005\000\178\000\200\000\005\000\005\000\005\000\207\000\
    \255\255\013\000\005\000\005\000\024\000\005\000\005\000\005\000\
    \095\000\098\000\204\000\096\000\204\000\004\000\096\000\004\000\
    \179\000\178\000\005\000\179\000\005\000\005\000\005\000\005\000\
    \005\000\255\255\180\000\024\000\006\000\180\000\255\255\006\000\
    \006\000\006\000\255\255\096\000\185\000\006\000\006\000\185\000\
    \006\000\006\000\006\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\006\000\005\000\006\000\
    \006\000\006\000\006\000\006\000\255\255\191\000\192\000\007\000\
    \191\000\192\000\007\000\007\000\007\000\255\255\255\255\255\255\
    \007\000\007\000\255\255\007\000\007\000\007\000\255\255\255\255\
    \255\255\097\000\097\000\255\255\005\000\097\000\005\000\255\255\
    \007\000\006\000\007\000\007\000\007\000\007\000\007\000\255\255\
    \255\255\255\255\008\000\255\255\255\255\008\000\008\000\008\000\
    \097\000\255\255\097\000\008\000\008\000\255\255\008\000\008\000\
    \008\000\255\255\208\000\255\255\208\000\255\255\255\255\006\000\
    \208\000\006\000\255\255\008\000\007\000\008\000\008\000\008\000\
    \008\000\008\000\255\255\255\255\255\255\010\000\255\255\255\255\
    \010\000\010\000\010\000\255\255\255\255\255\255\010\000\010\000\
    \255\255\010\000\010\000\010\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\007\000\255\255\007\000\255\255\010\000\008\000\
    \010\000\010\000\010\000\010\000\010\000\186\000\167\000\255\255\
    \186\000\167\000\011\000\255\255\255\255\011\000\011\000\011\000\
    \255\255\255\255\255\255\011\000\011\000\255\255\011\000\011\000\
    \011\000\255\255\255\255\255\255\255\255\008\000\167\000\008\000\
    \197\000\010\000\010\000\011\000\255\255\011\000\011\000\011\000\
    \011\000\011\000\255\255\255\255\198\000\255\255\204\000\014\000\
    \255\255\255\255\014\000\014\000\014\000\255\255\255\255\027\000\
    \014\000\014\000\027\000\014\000\014\000\014\000\255\255\255\255\
    \010\000\010\000\010\000\255\255\255\255\255\255\011\000\011\000\
    \014\000\255\255\014\000\014\000\014\000\014\000\014\000\255\255\
    \255\255\200\000\015\000\255\255\027\000\015\000\015\000\015\000\
    \167\000\255\255\255\255\015\000\015\000\255\255\015\000\015\000\
    \015\000\096\000\255\255\255\255\255\255\011\000\255\255\011\000\
    \255\255\255\255\255\255\015\000\014\000\015\000\015\000\015\000\
    \015\000\015\000\255\255\255\255\255\255\019\000\255\255\186\000\
    \019\000\019\000\019\000\255\255\255\255\140\000\019\000\019\000\
    \140\000\019\000\019\000\019\000\255\255\255\255\255\255\255\255\
    \255\255\027\000\014\000\255\255\014\000\255\255\019\000\015\000\
    \019\000\019\000\019\000\019\000\019\000\255\255\255\255\255\255\
    \023\000\255\255\140\000\023\000\023\000\023\000\255\255\255\255\
    \255\255\023\000\023\000\255\255\023\000\023\000\023\000\255\255\
    \097\000\255\255\255\255\255\255\255\255\015\000\255\255\015\000\
    \255\255\023\000\019\000\023\000\023\000\023\000\023\000\023\000\
    \255\255\255\255\255\255\025\000\255\255\255\255\025\000\025\000\
    \025\000\255\255\255\255\025\000\025\000\025\000\255\255\025\000\
    \025\000\025\000\255\255\255\255\255\255\255\255\255\255\140\000\
    \019\000\255\255\019\000\255\255\025\000\023\000\025\000\025\000\
    \025\000\025\000\025\000\030\000\255\255\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\255\255\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\030\000\023\000\255\255\023\000\255\255\255\255\
    \025\000\030\000\255\255\186\000\167\000\058\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\255\255\255\255\
    \255\255\028\000\255\255\255\255\030\000\255\255\255\255\255\255\
    \255\255\255\255\030\000\255\255\255\255\255\255\025\000\058\000\
    \025\000\030\000\255\255\030\000\255\255\058\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \255\255\255\255\255\255\255\255\028\000\027\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \031\000\028\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\031\000\255\255\255\255\031\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\031\000\255\255\
    \255\255\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\031\000\140\000\255\255\255\255\255\255\255\255\
    \255\255\031\000\255\255\255\255\031\000\255\255\255\255\031\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\031\000\255\255\
    \031\000\031\000\032\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\031\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\255\255\255\255\
    \255\255\255\255\032\000\255\255\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\033\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\255\255\255\255\255\255\255\255\033\000\255\255\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\061\000\061\000\061\000\061\000\061\000\
    \061\000\078\000\078\000\078\000\078\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\081\000\081\000\081\000\081\000\081\000\
    \081\000\081\000\081\000\081\000\081\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\061\000\061\000\061\000\061\000\061\000\
    \061\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
    \157\000\157\000\157\000\255\255\255\255\255\255\255\255\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\255\255\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\034\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\255\255\255\255\255\255\255\255\034\000\255\255\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\255\255\135\000\255\255\255\255\
    \135\000\255\255\255\255\062\000\062\000\062\000\062\000\062\000\
    \062\000\255\255\255\255\255\255\255\255\255\255\062\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\135\000\255\255\255\255\
    \255\255\255\255\135\000\135\000\255\255\135\000\255\255\255\255\
    \255\255\062\000\255\255\062\000\062\000\062\000\062\000\062\000\
    \062\000\255\255\255\255\255\255\255\255\255\255\062\000\255\255\
    \062\000\255\255\255\255\255\255\255\255\255\255\255\255\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\255\255\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\135\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\035\000\
    \255\255\255\255\035\000\035\000\035\000\255\255\255\255\255\255\
    \035\000\035\000\255\255\035\000\035\000\035\000\160\000\160\000\
    \160\000\160\000\160\000\160\000\160\000\160\000\160\000\160\000\
    \035\000\255\255\035\000\035\000\035\000\035\000\035\000\176\000\
    \176\000\176\000\176\000\176\000\176\000\176\000\176\000\176\000\
    \176\000\255\255\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\035\000\035\000\255\255\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\065\000\035\000\036\000\035\000\255\255\036\000\036\000\
    \036\000\255\255\255\255\255\255\036\000\036\000\092\000\036\000\
    \036\000\036\000\181\000\181\000\181\000\181\000\181\000\181\000\
    \181\000\181\000\181\000\181\000\036\000\255\255\036\000\036\000\
    \036\000\036\000\036\000\135\000\255\255\092\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\255\255\
    \036\000\036\000\255\255\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\255\255\036\000\255\255\
    \036\000\255\255\255\255\255\255\255\255\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\255\255\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\069\000\255\255\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\141\000\069\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\255\255\141\000\
    \255\255\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\037\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\255\255\255\255\255\255\
    \255\255\037\000\255\255\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\077\000\077\000\077\000\077\000\077\000\
    \077\000\077\000\077\000\077\000\077\000\255\255\255\255\255\255\
    \255\255\063\000\255\255\255\255\077\000\077\000\077\000\077\000\
    \077\000\077\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\063\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\063\000\255\255\063\000\077\000\077\000\077\000\077\000\
    \077\000\077\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\255\255\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\255\255\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\045\000\255\255\255\255\045\000\045\000\045\000\
    \255\255\255\255\255\255\045\000\045\000\255\255\045\000\045\000\
    \045\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\045\000\255\255\045\000\045\000\045\000\
    \045\000\045\000\255\255\255\255\255\255\255\255\046\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\255\255\255\255\255\255\255\255\255\255\045\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\255\255\255\255\255\255\045\000\046\000\045\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\084\000\084\000\084\000\084\000\084\000\084\000\
    \084\000\084\000\084\000\084\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\084\000\084\000\084\000\084\000\084\000\
    \084\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\084\000\084\000\084\000\084\000\084\000\
    \084\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\255\255\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\047\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\255\255\255\255\255\255\255\255\047\000\255\255\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\091\000\091\000\255\255\255\255\091\000\255\255\
    \255\255\255\255\255\255\156\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\156\000\156\000\156\000\255\255\255\255\255\255\
    \255\255\091\000\255\255\091\000\156\000\156\000\156\000\156\000\
    \156\000\156\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\156\000\156\000\156\000\156\000\
    \156\000\156\000\255\255\255\255\255\255\255\255\255\255\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\255\255\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\050\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\255\255\255\255\255\255\255\255\050\000\255\255\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\148\000\255\255\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\255\255\148\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \188\000\091\000\188\000\188\000\188\000\188\000\188\000\188\000\
    \188\000\188\000\188\000\188\000\188\000\188\000\188\000\188\000\
    \188\000\188\000\188\000\188\000\188\000\188\000\188\000\188\000\
    \188\000\188\000\188\000\188\000\255\255\255\255\188\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\255\255\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\051\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\255\255\255\255\255\255\255\255\051\000\255\255\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\163\000\163\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\163\000\163\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\163\000\163\000\163\000\163\000\163\000\
    \163\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\163\000\163\000\163\000\163\000\163\000\
    \163\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\255\255\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\255\255\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\070\000\
    \089\000\070\000\255\255\089\000\089\000\089\000\070\000\255\255\
    \255\255\089\000\089\000\255\255\089\000\089\000\089\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\089\000\255\255\089\000\089\000\089\000\089\000\089\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\101\000\
    \255\255\255\255\101\000\101\000\101\000\255\255\255\255\255\255\
    \101\000\101\000\255\255\101\000\101\000\101\000\255\255\255\255\
    \255\255\255\255\255\255\070\000\255\255\089\000\255\255\255\255\
    \101\000\070\000\101\000\101\000\101\000\101\000\101\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\070\000\255\255\255\255\
    \255\255\070\000\255\255\070\000\255\255\102\000\255\255\070\000\
    \102\000\102\000\102\000\089\000\255\255\089\000\102\000\102\000\
    \255\255\102\000\102\000\102\000\101\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\102\000\255\255\
    \102\000\102\000\102\000\102\000\102\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\103\000\255\255\255\255\103\000\
    \103\000\103\000\101\000\255\255\101\000\103\000\103\000\255\255\
    \103\000\103\000\103\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\102\000\255\255\255\255\103\000\255\255\103\000\
    \103\000\103\000\103\000\103\000\255\255\255\255\255\255\104\000\
    \255\255\255\255\104\000\104\000\104\000\255\255\255\255\255\255\
    \104\000\104\000\255\255\104\000\104\000\104\000\255\255\255\255\
    \102\000\255\255\102\000\255\255\255\255\255\255\255\255\255\255\
    \104\000\103\000\104\000\104\000\104\000\104\000\104\000\175\000\
    \175\000\175\000\175\000\175\000\175\000\175\000\175\000\175\000\
    \175\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \175\000\175\000\175\000\175\000\175\000\175\000\255\255\103\000\
    \255\255\103\000\255\255\255\255\104\000\255\255\255\255\070\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \175\000\175\000\175\000\175\000\175\000\175\000\255\255\255\255\
    \255\255\255\255\104\000\110\000\104\000\255\255\110\000\110\000\
    \110\000\110\000\255\255\255\255\110\000\110\000\255\255\110\000\
    \110\000\110\000\110\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\255\255\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\255\255\255\255\255\255\
    \110\000\110\000\255\255\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\255\255\110\000\111\000\
    \110\000\255\255\111\000\111\000\111\000\111\000\255\255\255\255\
    \111\000\111\000\255\255\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\255\255\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\255\255\255\255\255\255\111\000\111\000\255\255\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\255\255\111\000\112\000\111\000\255\255\112\000\112\000\
    \112\000\112\000\255\255\255\255\112\000\112\000\255\255\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\255\255\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\255\255\255\255\255\255\
    \112\000\112\000\255\255\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\255\255\112\000\113\000\
    \112\000\255\255\113\000\113\000\113\000\255\255\255\255\255\255\
    \113\000\113\000\255\255\113\000\113\000\113\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \113\000\255\255\113\000\113\000\113\000\113\000\113\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\114\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \255\255\255\255\114\000\255\255\113\000\255\255\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\255\255\113\000\255\255\113\000\114\000\255\255\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\115\000\255\255\255\255\115\000\115\000\115\000\115\000\
    \255\255\255\255\115\000\115\000\255\255\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\255\255\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\255\255\255\255\255\255\115\000\115\000\
    \255\255\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\116\000\115\000\255\255\115\000\255\255\
    \255\255\255\255\255\255\255\255\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\255\255\255\255\
    \116\000\255\255\255\255\255\255\255\255\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\255\255\
    \255\255\255\255\255\255\116\000\255\255\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\116\000\118\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\255\255\255\255\118\000\255\255\255\255\255\255\
    \255\255\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\255\255\255\255\255\255\255\255\118\000\
    \255\255\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\118\000\118\000\118\000\118\000\118\000\
    \118\000\118\000\118\000\128\000\255\255\255\255\128\000\128\000\
    \128\000\255\255\255\255\255\255\128\000\128\000\255\255\128\000\
    \128\000\128\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\128\000\255\255\128\000\128\000\
    \128\000\128\000\128\000\255\255\255\255\255\255\131\000\255\255\
    \255\255\131\000\131\000\131\000\255\255\255\255\255\255\131\000\
    \131\000\255\255\131\000\131\000\131\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\131\000\
    \128\000\131\000\131\000\131\000\131\000\131\000\255\255\255\255\
    \255\255\132\000\255\255\255\255\132\000\132\000\132\000\255\255\
    \255\255\255\255\132\000\132\000\255\255\132\000\132\000\132\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\128\000\255\255\
    \128\000\255\255\132\000\131\000\132\000\132\000\132\000\132\000\
    \132\000\255\255\255\255\255\255\133\000\255\255\255\255\133\000\
    \133\000\133\000\255\255\255\255\255\255\133\000\133\000\255\255\
    \133\000\133\000\133\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\131\000\255\255\131\000\255\255\133\000\132\000\133\000\
    \133\000\133\000\133\000\133\000\255\255\255\255\255\255\134\000\
    \255\255\255\255\134\000\134\000\134\000\255\255\255\255\255\255\
    \134\000\134\000\255\255\134\000\134\000\134\000\255\255\255\255\
    \149\000\255\255\149\000\255\255\132\000\255\255\132\000\149\000\
    \134\000\133\000\134\000\134\000\134\000\134\000\134\000\255\255\
    \149\000\149\000\149\000\149\000\149\000\149\000\149\000\149\000\
    \149\000\149\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\133\000\
    \255\255\133\000\255\255\255\255\134\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\172\000\255\255\255\255\172\000\255\255\
    \255\255\255\255\255\255\255\255\149\000\255\255\255\255\255\255\
    \255\255\255\255\149\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\172\000\134\000\172\000\134\000\255\255\149\000\255\255\
    \172\000\255\255\149\000\255\255\149\000\255\255\255\255\255\255\
    \149\000\172\000\172\000\172\000\172\000\172\000\172\000\172\000\
    \172\000\172\000\172\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\183\000\183\000\183\000\183\000\183\000\
    \183\000\183\000\183\000\183\000\183\000\172\000\255\255\255\255\
    \255\255\255\255\255\255\172\000\183\000\183\000\183\000\183\000\
    \183\000\183\000\255\255\255\255\255\255\255\255\255\255\172\000\
    \255\255\255\255\255\255\172\000\255\255\172\000\255\255\255\255\
    \255\255\172\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\183\000\183\000\183\000\183\000\
    \183\000\183\000\194\000\255\255\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\194\000\194\000\
    \194\000\194\000\194\000\194\000\194\000\194\000\210\000\255\255\
    \194\000\255\255\255\255\255\255\255\255\255\255\255\255\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\255\255\255\255\210\000\255\255\255\255\255\255\255\255\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\255\255\255\255\255\255\255\255\210\000\255\255\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\211\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\172\000\255\255\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\255\255\255\255\211\000\
    \255\255\255\255\255\255\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\255\255\255\255\
    \255\255\255\255\211\000\255\255\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\211\000\211\000\
    \211\000\211\000\211\000\211\000\211\000\211\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\010\000\036\000\012\000\000\000\000\000\
    \000\000\002\000\000\000\027\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\004\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_backtrk_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\039\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_default_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \019\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\001\000\000\000\036\000\036\000\000\000\036\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\001\000\022\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\007\000\001\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\001\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check_code = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\024\000\096\000\172\000\179\000\096\000\180\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \024\000\255\255\096\000\000\000\097\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\091\000\092\000\255\255\255\255\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\092\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \096\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_code = 
   "\255\004\255\255\005\255\255\007\255\006\255\255\003\255\000\004\
    \001\005\255\007\255\255\006\255\007\255\255\000\004\001\005\003\
    \006\002\007\255\001\255\255\000\001\255";
}

let rec token state lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 8 (-1) ;   __ocaml_lex_token_rec state lexbuf 0
and __ocaml_lex_token_rec state lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 289 "src/kernel/preprocess/raw_lexer.mll"
                 (
      match state.preprocessor with
      | None ->
        error (Illegal_character (Lexing.lexeme_char lexbuf 0))
              (Location.curr lexbuf)
      | Some _ ->
        update_loc lexbuf None 1 false 0;
        token state lexbuf )
# 1595 "src/kernel/preprocess/raw_lexer.ml"

  | 1 ->
# 298 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 1 false 0;
        match state.preprocessor with
        | None -> token state lexbuf
        | Some _ -> return EOL
      )
# 1604 "src/kernel/preprocess/raw_lexer.ml"

  | 2 ->
# 304 "src/kernel/preprocess/raw_lexer.mll"
      ( token state lexbuf )
# 1609 "src/kernel/preprocess/raw_lexer.ml"

  | 3 ->
# 306 "src/kernel/preprocess/raw_lexer.mll"
      ( return UNDERSCORE )
# 1614 "src/kernel/preprocess/raw_lexer.ml"

  | 4 ->
# 308 "src/kernel/preprocess/raw_lexer.mll"
      ( return TILDE )
# 1619 "src/kernel/preprocess/raw_lexer.ml"

  | 5 ->
# 310 "src/kernel/preprocess/raw_lexer.mll"
      ( lABEL (get_label_name lexbuf) )
# 1624 "src/kernel/preprocess/raw_lexer.ml"

  | 6 ->
# 312 "src/kernel/preprocess/raw_lexer.mll"
      ( warn_latin1 lexbuf; lABEL (get_label_name lexbuf) )
# 1629 "src/kernel/preprocess/raw_lexer.ml"

  | 7 ->
# 314 "src/kernel/preprocess/raw_lexer.mll"
      ( return QUESTION )
# 1634 "src/kernel/preprocess/raw_lexer.ml"

  | 8 ->
# 316 "src/kernel/preprocess/raw_lexer.mll"
      ( oPTLABEL (get_label_name lexbuf) )
# 1639 "src/kernel/preprocess/raw_lexer.ml"

  | 9 ->
# 318 "src/kernel/preprocess/raw_lexer.mll"
      ( warn_latin1 lexbuf; oPTLABEL (get_label_name lexbuf) )
# 1644 "src/kernel/preprocess/raw_lexer.ml"

  | 10 ->
# 320 "src/kernel/preprocess/raw_lexer.mll"
    ( let s = Lexing.lexeme lexbuf in
      return (try Hashtbl.find state.keywords s
              with Not_found ->
              try Hashtbl.find keyword_table s
              with Not_found ->
                LIDENT s) )
# 1654 "src/kernel/preprocess/raw_lexer.ml"

  | 11 ->
# 327 "src/kernel/preprocess/raw_lexer.mll"
      ( warn_latin1 lexbuf; return (LIDENT (Lexing.lexeme lexbuf)) )
# 1659 "src/kernel/preprocess/raw_lexer.ml"

  | 12 ->
# 329 "src/kernel/preprocess/raw_lexer.mll"
    ( (* Capitalized keywords for OUnit *)
      let s = Lexing.lexeme lexbuf in
      return (try Hashtbl.find state.keywords s
              with Not_found ->
              try Hashtbl.find keyword_table s
              with Not_found ->
                UIDENT s) )
# 1670 "src/kernel/preprocess/raw_lexer.ml"

  | 13 ->
# 337 "src/kernel/preprocess/raw_lexer.mll"
      ( try
          return (INT (cvt_int_literal (Lexing.lexeme lexbuf)))
        with Failure _ ->
          error (Literal_overflow "int") (Location.curr lexbuf)
      )
# 1679 "src/kernel/preprocess/raw_lexer.ml"

  | 14 ->
# 343 "src/kernel/preprocess/raw_lexer.mll"
      ( return (FLOAT (remove_underscores(Lexing.lexeme lexbuf))) )
# 1684 "src/kernel/preprocess/raw_lexer.ml"

  | 15 ->
# 345 "src/kernel/preprocess/raw_lexer.mll"
      ( try
          return (INT32 (cvt_int32_literal (Lexing.lexeme lexbuf)))
        with Failure _ ->
          error (Literal_overflow "int32") (Location.curr lexbuf) )
# 1692 "src/kernel/preprocess/raw_lexer.ml"

  | 16 ->
# 350 "src/kernel/preprocess/raw_lexer.mll"
      ( try
          return (INT64 (cvt_int64_literal (Lexing.lexeme lexbuf)))
        with Failure _ ->
          error (Literal_overflow "int64") (Location.curr lexbuf) )
# 1700 "src/kernel/preprocess/raw_lexer.ml"

  | 17 ->
# 355 "src/kernel/preprocess/raw_lexer.mll"
      ( try
          return (NATIVEINT (cvt_nativeint_literal (Lexing.lexeme lexbuf)))
        with Failure _ ->
          error (Literal_overflow "nativeint") (Location.curr lexbuf) )
# 1708 "src/kernel/preprocess/raw_lexer.ml"

  | 18 ->
# 360 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.reset state.buffer;
        state.string_start_loc <- Location.curr lexbuf;
        string state lexbuf >>= fun () ->
        lexbuf.lex_start_p <- state.string_start_loc.Location.loc_start;
        state.string_start_loc <- Location.none;
        return (STRING (Buffer.contents state.buffer, None))
      )
# 1719 "src/kernel/preprocess/raw_lexer.ml"

  | 19 ->
# 368 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.reset state.buffer;
        let delim = Lexing.lexeme lexbuf in
        let delim = String.sub delim 1 (String.length delim - 2) in
        state.string_start_loc <- Location.curr lexbuf;
        quoted_string state delim lexbuf >>= fun () ->
        lexbuf.lex_start_p <- state.string_start_loc.Location.loc_start;
        state.string_start_loc <- Location.none;
        return (STRING (Buffer.contents state.buffer, Some delim)) )
# 1731 "src/kernel/preprocess/raw_lexer.ml"

  | 20 ->
# 377 "src/kernel/preprocess/raw_lexer.mll"
    ( update_loc lexbuf None 1 false 1;
      return (CHAR (Lexing.lexeme_char lexbuf 1)) )
# 1737 "src/kernel/preprocess/raw_lexer.ml"

  | 21 ->
# 380 "src/kernel/preprocess/raw_lexer.mll"
    ( return (CHAR (Lexing.lexeme_char lexbuf 1)) )
# 1742 "src/kernel/preprocess/raw_lexer.ml"

  | 22 ->
# 382 "src/kernel/preprocess/raw_lexer.mll"
    ( return (CHAR (char_for_backslash (Lexing.lexeme_char lexbuf 2))) )
# 1747 "src/kernel/preprocess/raw_lexer.ml"

  | 23 ->
# 384 "src/kernel/preprocess/raw_lexer.mll"
    ( char_for_decimal_code state lexbuf 2 >>= fun c -> return (CHAR c) )
# 1752 "src/kernel/preprocess/raw_lexer.ml"

  | 24 ->
# 386 "src/kernel/preprocess/raw_lexer.mll"
    ( return (CHAR (char_for_hexadecimal_code lexbuf 3)) )
# 1757 "src/kernel/preprocess/raw_lexer.ml"

  | 25 ->
# 388 "src/kernel/preprocess/raw_lexer.mll"
      ( let l = Lexing.lexeme lexbuf in
        let esc = String.sub l 1 (String.length l - 1) in
        error (Illegal_escape esc) (Location.curr lexbuf)
      )
# 1765 "src/kernel/preprocess/raw_lexer.ml"

  | 26 ->
# 393 "src/kernel/preprocess/raw_lexer.mll"
      ( let start_loc = Location.curr lexbuf in
        state.comment_start_loc <- [start_loc];
        Buffer.reset state.buffer;
        comment state lexbuf >>= fun end_loc ->
        let s = Buffer.contents state.buffer in
        Buffer.reset state.buffer;
        return (COMMENT (s, { start_loc with
                              Location.loc_end = end_loc.Location.loc_end }))
      )
# 1778 "src/kernel/preprocess/raw_lexer.ml"

  | 27 ->
# 403 "src/kernel/preprocess/raw_lexer.mll"
      ( let loc = Location.curr lexbuf in
        Location.prerr_warning loc Warnings.Comment_start;
        state.comment_start_loc <- [loc];
        Buffer.reset state.buffer;
        comment state lexbuf >>= fun end_loc ->
        let s = Buffer.contents state.buffer in
        Buffer.reset state.buffer;
        return (COMMENT (s, { loc with Location.loc_end = end_loc.Location.loc_end }))
      )
# 1791 "src/kernel/preprocess/raw_lexer.ml"

  | 28 ->
# 413 "src/kernel/preprocess/raw_lexer.mll"
      ( let loc = Location.curr lexbuf in
        Location.prerr_warning loc Warnings.Comment_not_end;
        lexbuf.Lexing.lex_curr_pos <- lexbuf.Lexing.lex_curr_pos - 1;
        let curpos = lexbuf.lex_curr_p in
        lexbuf.lex_curr_p <- { curpos with pos_cnum = curpos.pos_cnum - 1 };
        return STAR
      )
# 1802 "src/kernel/preprocess/raw_lexer.ml"

  | 29 ->
let
# 420 "src/kernel/preprocess/raw_lexer.mll"
                                   num
# 1808 "src/kernel/preprocess/raw_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1)
and
# 421 "src/kernel/preprocess/raw_lexer.mll"
                                           name
# 1813 "src/kernel/preprocess/raw_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(3) lexbuf.Lexing.lex_mem.(2) in
# 423 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf name (int_of_string num) true 0;
        token state lexbuf
      )
# 1819 "src/kernel/preprocess/raw_lexer.ml"

  | 30 ->
# 426 "src/kernel/preprocess/raw_lexer.mll"
         ( return SHARP )
# 1824 "src/kernel/preprocess/raw_lexer.ml"

  | 31 ->
# 427 "src/kernel/preprocess/raw_lexer.mll"
         ( return AMPERSAND )
# 1829 "src/kernel/preprocess/raw_lexer.ml"

  | 32 ->
# 428 "src/kernel/preprocess/raw_lexer.mll"
         ( return AMPERAMPER )
# 1834 "src/kernel/preprocess/raw_lexer.ml"

  | 33 ->
# 429 "src/kernel/preprocess/raw_lexer.mll"
         ( return BACKQUOTE )
# 1839 "src/kernel/preprocess/raw_lexer.ml"

  | 34 ->
# 430 "src/kernel/preprocess/raw_lexer.mll"
         ( return QUOTE )
# 1844 "src/kernel/preprocess/raw_lexer.ml"

  | 35 ->
# 431 "src/kernel/preprocess/raw_lexer.mll"
         ( return LPAREN )
# 1849 "src/kernel/preprocess/raw_lexer.ml"

  | 36 ->
# 432 "src/kernel/preprocess/raw_lexer.mll"
         ( return RPAREN )
# 1854 "src/kernel/preprocess/raw_lexer.ml"

  | 37 ->
# 433 "src/kernel/preprocess/raw_lexer.mll"
         ( return STAR )
# 1859 "src/kernel/preprocess/raw_lexer.ml"

  | 38 ->
# 434 "src/kernel/preprocess/raw_lexer.mll"
         ( return COMMA )
# 1864 "src/kernel/preprocess/raw_lexer.ml"

  | 39 ->
# 435 "src/kernel/preprocess/raw_lexer.mll"
         ( return MINUSGREATER )
# 1869 "src/kernel/preprocess/raw_lexer.ml"

  | 40 ->
# 436 "src/kernel/preprocess/raw_lexer.mll"
         ( return DOT )
# 1874 "src/kernel/preprocess/raw_lexer.ml"

  | 41 ->
# 437 "src/kernel/preprocess/raw_lexer.mll"
         ( return DOTDOT )
# 1879 "src/kernel/preprocess/raw_lexer.ml"

  | 42 ->
# 438 "src/kernel/preprocess/raw_lexer.mll"
         ( return COLON )
# 1884 "src/kernel/preprocess/raw_lexer.ml"

  | 43 ->
# 439 "src/kernel/preprocess/raw_lexer.mll"
         ( return COLONCOLON )
# 1889 "src/kernel/preprocess/raw_lexer.ml"

  | 44 ->
# 440 "src/kernel/preprocess/raw_lexer.mll"
         ( return COLONEQUAL )
# 1894 "src/kernel/preprocess/raw_lexer.ml"

  | 45 ->
# 441 "src/kernel/preprocess/raw_lexer.mll"
         ( return COLONGREATER )
# 1899 "src/kernel/preprocess/raw_lexer.ml"

  | 46 ->
# 442 "src/kernel/preprocess/raw_lexer.mll"
         ( return SEMI )
# 1904 "src/kernel/preprocess/raw_lexer.ml"

  | 47 ->
# 443 "src/kernel/preprocess/raw_lexer.mll"
         ( return SEMISEMI )
# 1909 "src/kernel/preprocess/raw_lexer.ml"

  | 48 ->
# 444 "src/kernel/preprocess/raw_lexer.mll"
         ( return LESS )
# 1914 "src/kernel/preprocess/raw_lexer.ml"

  | 49 ->
# 445 "src/kernel/preprocess/raw_lexer.mll"
         ( return LESSMINUS )
# 1919 "src/kernel/preprocess/raw_lexer.ml"

  | 50 ->
# 446 "src/kernel/preprocess/raw_lexer.mll"
         ( return EQUAL )
# 1924 "src/kernel/preprocess/raw_lexer.ml"

  | 51 ->
# 447 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACKET )
# 1929 "src/kernel/preprocess/raw_lexer.ml"

  | 52 ->
# 448 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACKETBAR )
# 1934 "src/kernel/preprocess/raw_lexer.ml"

  | 53 ->
# 449 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACKETLESS )
# 1939 "src/kernel/preprocess/raw_lexer.ml"

  | 54 ->
# 450 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACKETGREATER )
# 1944 "src/kernel/preprocess/raw_lexer.ml"

  | 55 ->
# 451 "src/kernel/preprocess/raw_lexer.mll"
         ( return RBRACKET )
# 1949 "src/kernel/preprocess/raw_lexer.ml"

  | 56 ->
# 452 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACE )
# 1954 "src/kernel/preprocess/raw_lexer.ml"

  | 57 ->
# 453 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACELESS )
# 1959 "src/kernel/preprocess/raw_lexer.ml"

  | 58 ->
# 454 "src/kernel/preprocess/raw_lexer.mll"
         ( return BAR )
# 1964 "src/kernel/preprocess/raw_lexer.ml"

  | 59 ->
# 455 "src/kernel/preprocess/raw_lexer.mll"
         ( return BARBAR )
# 1969 "src/kernel/preprocess/raw_lexer.ml"

  | 60 ->
# 456 "src/kernel/preprocess/raw_lexer.mll"
         ( return BARRBRACKET )
# 1974 "src/kernel/preprocess/raw_lexer.ml"

  | 61 ->
# 457 "src/kernel/preprocess/raw_lexer.mll"
         ( return GREATER )
# 1979 "src/kernel/preprocess/raw_lexer.ml"

  | 62 ->
# 458 "src/kernel/preprocess/raw_lexer.mll"
         ( return GREATERRBRACKET )
# 1984 "src/kernel/preprocess/raw_lexer.ml"

  | 63 ->
# 459 "src/kernel/preprocess/raw_lexer.mll"
         ( return RBRACE )
# 1989 "src/kernel/preprocess/raw_lexer.ml"

  | 64 ->
# 460 "src/kernel/preprocess/raw_lexer.mll"
         ( return GREATERRBRACE )
# 1994 "src/kernel/preprocess/raw_lexer.ml"

  | 65 ->
# 461 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACKETAT )
# 1999 "src/kernel/preprocess/raw_lexer.ml"

  | 66 ->
# 462 "src/kernel/preprocess/raw_lexer.mll"
         ( return LBRACKETPERCENT )
# 2004 "src/kernel/preprocess/raw_lexer.ml"

  | 67 ->
# 463 "src/kernel/preprocess/raw_lexer.mll"
          ( return LBRACKETPERCENTPERCENT )
# 2009 "src/kernel/preprocess/raw_lexer.ml"

  | 68 ->
# 464 "src/kernel/preprocess/raw_lexer.mll"
          ( return LBRACKETATAT )
# 2014 "src/kernel/preprocess/raw_lexer.ml"

  | 69 ->
# 465 "src/kernel/preprocess/raw_lexer.mll"
           ( return LBRACKETATATAT )
# 2019 "src/kernel/preprocess/raw_lexer.ml"

  | 70 ->
# 467 "src/kernel/preprocess/raw_lexer.mll"
         ( return (try Hashtbl.find state.keywords "!"
                   with Not_found -> BANG) )
# 2025 "src/kernel/preprocess/raw_lexer.ml"

  | 71 ->
# 469 "src/kernel/preprocess/raw_lexer.mll"
         ( return (INFIXOP0 "!=") )
# 2030 "src/kernel/preprocess/raw_lexer.ml"

  | 72 ->
# 470 "src/kernel/preprocess/raw_lexer.mll"
         ( return PLUS )
# 2035 "src/kernel/preprocess/raw_lexer.ml"

  | 73 ->
# 471 "src/kernel/preprocess/raw_lexer.mll"
         ( return PLUSDOT )
# 2040 "src/kernel/preprocess/raw_lexer.ml"

  | 74 ->
# 472 "src/kernel/preprocess/raw_lexer.mll"
         ( return PLUSEQ )
# 2045 "src/kernel/preprocess/raw_lexer.ml"

  | 75 ->
# 473 "src/kernel/preprocess/raw_lexer.mll"
         ( return MINUS )
# 2050 "src/kernel/preprocess/raw_lexer.ml"

  | 76 ->
# 474 "src/kernel/preprocess/raw_lexer.mll"
         ( return MINUSDOT )
# 2055 "src/kernel/preprocess/raw_lexer.ml"

  | 77 ->
# 477 "src/kernel/preprocess/raw_lexer.mll"
            ( return (PREFIXOP(Lexing.lexeme lexbuf)) )
# 2060 "src/kernel/preprocess/raw_lexer.ml"

  | 78 ->
# 479 "src/kernel/preprocess/raw_lexer.mll"
            ( return (PREFIXOP(Lexing.lexeme lexbuf)) )
# 2065 "src/kernel/preprocess/raw_lexer.ml"

  | 79 ->
# 481 "src/kernel/preprocess/raw_lexer.mll"
            ( return (INFIXOP0(Lexing.lexeme lexbuf)) )
# 2070 "src/kernel/preprocess/raw_lexer.ml"

  | 80 ->
# 483 "src/kernel/preprocess/raw_lexer.mll"
            ( return (INFIXOP1(Lexing.lexeme lexbuf)) )
# 2075 "src/kernel/preprocess/raw_lexer.ml"

  | 81 ->
# 485 "src/kernel/preprocess/raw_lexer.mll"
            ( return (INFIXOP2(Lexing.lexeme lexbuf)) )
# 2080 "src/kernel/preprocess/raw_lexer.ml"

  | 82 ->
# 487 "src/kernel/preprocess/raw_lexer.mll"
            ( return (INFIXOP4(Lexing.lexeme lexbuf)) )
# 2085 "src/kernel/preprocess/raw_lexer.ml"

  | 83 ->
# 488 "src/kernel/preprocess/raw_lexer.mll"
            ( return PERCENT )
# 2090 "src/kernel/preprocess/raw_lexer.ml"

  | 84 ->
# 490 "src/kernel/preprocess/raw_lexer.mll"
            ( return (INFIXOP3(Lexing.lexeme lexbuf)) )
# 2095 "src/kernel/preprocess/raw_lexer.ml"

  | 85 ->
# 491 "src/kernel/preprocess/raw_lexer.mll"
        ( return EOF )
# 2100 "src/kernel/preprocess/raw_lexer.ml"

  | 86 ->
# 496 "src/kernel/preprocess/raw_lexer.mll"
    ( let start = lexbuf.lex_start_p in
      p4_quotation lexbuf >>= fun () ->
      lexbuf.lex_start_p <- start;
      return P4_QUOTATION
    )
# 2109 "src/kernel/preprocess/raw_lexer.ml"

  | 87 ->
# 503 "src/kernel/preprocess/raw_lexer.mll"
      ( error (Illegal_character (Lexing.lexeme_char lexbuf 0))
              (Location.curr lexbuf)
      )
# 2116 "src/kernel/preprocess/raw_lexer.ml"

  | __ocaml_lex_state -> __ocaml_lex_refill 
      (fun lexbuf -> lexbuf.Lexing.refill_buff lexbuf; 
         __ocaml_lex_token_rec state lexbuf __ocaml_lex_state) lexbuf

and comment state lexbuf =
    __ocaml_lex_comment_rec state lexbuf 135
and __ocaml_lex_comment_rec state lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 509 "src/kernel/preprocess/raw_lexer.mll"
      ( state.comment_start_loc <- (Location.curr lexbuf) :: state.comment_start_loc;
      Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
      comment state lexbuf
    )
# 2132 "src/kernel/preprocess/raw_lexer.ml"

  | 1 ->
# 514 "src/kernel/preprocess/raw_lexer.mll"
      ( match state.comment_start_loc with
        | [] -> assert false
        | [_] -> state.comment_start_loc <- []; return (Location.curr lexbuf)
        | _ :: l -> state.comment_start_loc <- l;
                  Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
                  comment state lexbuf
       )
# 2143 "src/kernel/preprocess/raw_lexer.ml"

  | 2 ->
# 522 "src/kernel/preprocess/raw_lexer.mll"
      (
        state.string_start_loc <- Location.curr lexbuf;
        Buffer.add_char state.buffer '"';
        (catch (string state lexbuf) (fun e l -> match e with
             | Unterminated_string ->
               begin match state.comment_start_loc with
                 | [] -> assert false
                 | loc :: _ ->
                   let start = List.hd (List.rev state.comment_start_loc) in
                   state.comment_start_loc <- [];
                   error (Unterminated_string_in_comment (start, l)) loc
               end
             | e -> error e l
           )
        ) >>= fun () ->
      state.string_start_loc <- Location.none;
      Buffer.add_char state.buffer '"';
      comment state lexbuf )
# 2165 "src/kernel/preprocess/raw_lexer.ml"

  | 3 ->
# 541 "src/kernel/preprocess/raw_lexer.mll"
      (
        let delim = Lexing.lexeme lexbuf in
        let delim = String.sub delim 1 (String.length delim - 2) in
        state.string_start_loc <- Location.curr lexbuf;
        Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
        (catch (quoted_string state delim lexbuf) (fun e l -> match e with
             | Unterminated_string ->
               begin match state.comment_start_loc with
                 | [] -> assert false
                 | loc :: _ ->
                   let start = List.hd (List.rev state.comment_start_loc) in
                   state.comment_start_loc <- [];
                   error (Unterminated_string_in_comment (start, l)) loc
               end
             | e -> error e l
           )
        ) >>= fun () ->
        state.string_start_loc <- Location.none;
        Buffer.add_char state.buffer '|';
        Buffer.add_string state.buffer delim;
        Buffer.add_char state.buffer '}';
        comment state lexbuf )
# 2191 "src/kernel/preprocess/raw_lexer.ml"

  | 4 ->
# 565 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_string state.buffer (Lexing.lexeme lexbuf); comment state lexbuf )
# 2196 "src/kernel/preprocess/raw_lexer.ml"

  | 5 ->
# 567 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 1 false 1;
        Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
        comment state lexbuf
      )
# 2204 "src/kernel/preprocess/raw_lexer.ml"

  | 6 ->
# 572 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_string state.buffer (Lexing.lexeme lexbuf); comment state lexbuf )
# 2209 "src/kernel/preprocess/raw_lexer.ml"

  | 7 ->
# 574 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_string state.buffer (Lexing.lexeme lexbuf); comment state lexbuf )
# 2214 "src/kernel/preprocess/raw_lexer.ml"

  | 8 ->
# 576 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_string state.buffer (Lexing.lexeme lexbuf); comment state lexbuf )
# 2219 "src/kernel/preprocess/raw_lexer.ml"

  | 9 ->
# 578 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_string state.buffer (Lexing.lexeme lexbuf); comment state lexbuf )
# 2224 "src/kernel/preprocess/raw_lexer.ml"

  | 10 ->
# 580 "src/kernel/preprocess/raw_lexer.mll"
      ( match state.comment_start_loc with
        | [] -> assert false
        | loc :: _ ->
          let start = List.hd (List.rev state.comment_start_loc) in
          state.comment_start_loc <- [];
          error (Unterminated_comment start) loc
      )
# 2235 "src/kernel/preprocess/raw_lexer.ml"

  | 11 ->
# 588 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 1 false 0;
        Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
        comment state lexbuf
      )
# 2243 "src/kernel/preprocess/raw_lexer.ml"

  | 12 ->
# 593 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_string state.buffer (Lexing.lexeme lexbuf); comment state lexbuf )
# 2248 "src/kernel/preprocess/raw_lexer.ml"

  | __ocaml_lex_state -> __ocaml_lex_refill 
      (fun lexbuf -> lexbuf.Lexing.refill_buff lexbuf; 
         __ocaml_lex_comment_rec state lexbuf __ocaml_lex_state) lexbuf

and string state lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1) ;   __ocaml_lex_string_rec state lexbuf 167
and __ocaml_lex_string_rec state lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 597 "src/kernel/preprocess/raw_lexer.mll"
      ( return () )
# 2261 "src/kernel/preprocess/raw_lexer.ml"

  | 1 ->
let
# 598 "src/kernel/preprocess/raw_lexer.mll"
                                  space
# 2267 "src/kernel/preprocess/raw_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_curr_pos in
# 599 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 1 false (String.length space);
        string state lexbuf
      )
# 2273 "src/kernel/preprocess/raw_lexer.ml"

  | 2 ->
# 603 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_char state.buffer
          (char_for_backslash (Lexing.lexeme_char lexbuf 1));
        string state lexbuf )
# 2280 "src/kernel/preprocess/raw_lexer.ml"

  | 3 ->
# 607 "src/kernel/preprocess/raw_lexer.mll"
      ( char_for_decimal_code state lexbuf 1 >>= fun c ->
        Buffer.add_char state.buffer c;
        string state lexbuf )
# 2287 "src/kernel/preprocess/raw_lexer.ml"

  | 4 ->
# 611 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_char state.buffer (char_for_hexadecimal_code lexbuf 2);
        string state lexbuf )
# 2293 "src/kernel/preprocess/raw_lexer.ml"

  | 5 ->
# 614 "src/kernel/preprocess/raw_lexer.mll"
      ( if in_comment state
        then string state lexbuf
        else begin
(*  Should be an error, but we are very lax.
                  error (Illegal_escape (Lexing.lexeme lexbuf),
                        (Location.curr lexbuf)
*)
          let loc = Location.curr lexbuf in
          Location.prerr_warning loc Warnings.Illegal_backslash;
          Buffer.add_char state.buffer (Lexing.lexeme_char lexbuf 0);
          Buffer.add_char state.buffer (Lexing.lexeme_char lexbuf 1);
          string state lexbuf
        end
      )
# 2311 "src/kernel/preprocess/raw_lexer.ml"

  | 6 ->
# 629 "src/kernel/preprocess/raw_lexer.mll"
      ( if not (in_comment state) then
          Location.prerr_warning (Location.curr lexbuf) Warnings.Eol_in_string;
        update_loc lexbuf None 1 false 0;
        Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
        string state lexbuf
      )
# 2321 "src/kernel/preprocess/raw_lexer.ml"

  | 7 ->
# 636 "src/kernel/preprocess/raw_lexer.mll"
      ( let loc = state.string_start_loc in
        state.string_start_loc <- Location.none;
        error Unterminated_string loc )
# 2328 "src/kernel/preprocess/raw_lexer.ml"

  | 8 ->
# 640 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_char state.buffer (Lexing.lexeme_char lexbuf 0);
        string state lexbuf )
# 2334 "src/kernel/preprocess/raw_lexer.ml"

  | __ocaml_lex_state -> __ocaml_lex_refill 
      (fun lexbuf -> lexbuf.Lexing.refill_buff lexbuf; 
         __ocaml_lex_string_rec state lexbuf __ocaml_lex_state) lexbuf

and quoted_string state delim lexbuf =
    __ocaml_lex_quoted_string_rec state delim lexbuf 186
and __ocaml_lex_quoted_string_rec state delim lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 645 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 1 false 0;
        Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
        quoted_string state delim lexbuf
      )
# 2350 "src/kernel/preprocess/raw_lexer.ml"

  | 1 ->
# 650 "src/kernel/preprocess/raw_lexer.mll"
      ( let loc = state.string_start_loc in
        state.string_start_loc <- Location.none;
        error Unterminated_string loc )
# 2357 "src/kernel/preprocess/raw_lexer.ml"

  | 2 ->
# 654 "src/kernel/preprocess/raw_lexer.mll"
      (
        let edelim = Lexing.lexeme lexbuf in
        let edelim = String.sub edelim 1 (String.length edelim - 2) in
        if delim = edelim then return ()
        else (Buffer.add_string state.buffer (Lexing.lexeme lexbuf);
              quoted_string state delim lexbuf)
      )
# 2368 "src/kernel/preprocess/raw_lexer.ml"

  | 3 ->
# 662 "src/kernel/preprocess/raw_lexer.mll"
      ( Buffer.add_char state.buffer (Lexing.lexeme_char lexbuf 0);
        quoted_string state delim lexbuf )
# 2374 "src/kernel/preprocess/raw_lexer.ml"

  | __ocaml_lex_state -> __ocaml_lex_refill 
      (fun lexbuf -> lexbuf.Lexing.refill_buff lexbuf; 
         __ocaml_lex_quoted_string_rec state delim lexbuf __ocaml_lex_state) lexbuf

and skip_sharp_bang lexbuf =
    __ocaml_lex_skip_sharp_bang_rec lexbuf 195
and __ocaml_lex_skip_sharp_bang_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 667 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 3 false 0; return () )
# 2387 "src/kernel/preprocess/raw_lexer.ml"

  | 1 ->
# 669 "src/kernel/preprocess/raw_lexer.mll"
      ( update_loc lexbuf None 1 false 0; return () )
# 2392 "src/kernel/preprocess/raw_lexer.ml"

  | 2 ->
# 670 "src/kernel/preprocess/raw_lexer.mll"
       ( return () )
# 2397 "src/kernel/preprocess/raw_lexer.ml"

  | __ocaml_lex_state -> __ocaml_lex_refill 
      (fun lexbuf -> lexbuf.Lexing.refill_buff lexbuf; 
         __ocaml_lex_skip_sharp_bang_rec lexbuf __ocaml_lex_state) lexbuf

and p4_quotation lexbuf =
    __ocaml_lex_p4_quotation_rec lexbuf 204
and __ocaml_lex_p4_quotation_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 674 "src/kernel/preprocess/raw_lexer.mll"
      ( p4_quotation lexbuf )
# 2410 "src/kernel/preprocess/raw_lexer.ml"

  | 1 ->
# 677 "src/kernel/preprocess/raw_lexer.mll"
      ( return () )
# 2415 "src/kernel/preprocess/raw_lexer.ml"

  | 2 ->
# 679 "src/kernel/preprocess/raw_lexer.mll"
      ( error Unterminated_string (Location.curr lexbuf) )
# 2420 "src/kernel/preprocess/raw_lexer.ml"

  | 3 ->
# 681 "src/kernel/preprocess/raw_lexer.mll"
      ( p4_quotation lexbuf )
# 2425 "src/kernel/preprocess/raw_lexer.ml"

  | __ocaml_lex_state -> __ocaml_lex_refill 
      (fun lexbuf -> lexbuf.Lexing.refill_buff lexbuf; 
         __ocaml_lex_p4_quotation_rec lexbuf __ocaml_lex_state) lexbuf

;;

# 683 "src/kernel/preprocess/raw_lexer.mll"
 
  type comment = string * Location.t

  (* preprocessor support not implemented, not compatible with monadic
     interface *)

  let rec token_without_comments state lexbuf =
    token state lexbuf >>= function
    | COMMENT (s, comment_loc) ->
      token_without_comments state lexbuf
    | tok -> return tok

# 2446 "src/kernel/preprocess/raw_lexer.ml"
