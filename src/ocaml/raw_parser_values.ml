open Std
open Raw_parser

module Token =
struct
  type t = token

  let to_string =
    let p a s = "(" ^ s ^ ")" in
    function
    | WITH            -> "WITH"            | WHILE_LWT       -> "WHILE_LWT"
    | WHILE           -> "WHILE"           | WHEN            -> "WHEN"
    | VIRTUAL         -> "VIRTUAL"         | VAL             -> "VAL"
    | UNDERSCORE      -> "UNDERSCORE"      | UIDENT _        -> "UIDENT"
    | TYPE            -> "TYPE"            | TRY_LWT         -> "TRY_LWT"
    | TRY             -> "TRY"             | TRUE            -> "TRUE"
    | TO              -> "TO"              | TILDE           -> "TILDE"
    | THEN            -> "THEN"            | STRUCT          -> "STRUCT"
    | STRING _        -> "STRING"          | STAR            -> "STAR"
    | SIG             -> "SIG"             | SHARP           -> "SHARP"
    | SEMISEMI        -> "SEMISEMI"        | SEMI            -> "SEMI"
    | RPAREN          -> "RPAREN"          | REC             -> "REC"
    | RBRACKET        -> "RBRACKET"        | RBRACE          -> "RBRACE"
    | QUOTE           -> "QUOTE"           | QUESTION        -> "QUESTION"
    | PRIVATE         -> "PRIVATE"         | PREFIXOP s      -> p"PREFIXOP" s
    | PLUSDOT         -> "PLUSDOT"         | PLUS            -> "PLUS"
    | OR              -> "OR"              | OPTLABEL _      -> "OPTLABEL"
    | OPEN            -> "OPEN"            | OF              -> "OF"
    | OBJECT          -> "OBJECT"          | NONREC          -> "NONREC"
    | NEW             -> "NEW"             | NATIVEINT _     -> "NATIVEINT"
    | MUTABLE         -> "MUTABLE"         | MODULE          -> "MODULE"
    | MINUSGREATER    -> "MINUSGREATER"    | MINUSDOT        -> "MINUSDOT"
    | MINUS           -> "MINUS"           | METHOD          -> "METHOD"
    | MATCH_LWT       -> "MATCH_LWT"       | MATCH           -> "MATCH"
    | LPAREN          -> "LPAREN"          | LIDENT _        -> "LIDENT"
    | LET_LWT         -> "LET_LWT"         | LET             -> "LET"
    | LESSMINUS       -> "LESSMINUS"       | LESS            -> "LESS"
    | LBRACKETLESS    -> "LBRACKETLESS"    | LBRACKETGREATER -> "LBRACKETGREATER"
    | LBRACKETBAR     -> "LBRACKETBAR"     | LBRACKET        -> "LBRACKET"
    | LBRACELESS      -> "LBRACELESS"      | LBRACE          -> "LBRACE"
    | LAZY            -> "LAZY"            | LABEL _         -> "LABEL"
    | JSNEW           -> "JSNEW"           | INT64 _         -> "INT64"
    | INT32 _         -> "INT32"           | INT _           -> "INT"
    | INITIALIZER     -> "INITIALIZER"     | INHERIT         -> "INHERIT"
    | INFIXOP4 s      -> p"INFIXOP4" s     | INFIXOP3 s      -> p"INFIXOP3" s
    | INFIXOP2 s      -> p"INFIXOP2" s     | INFIXOP1 s      -> p"INFIXOP1" s
    | INFIXOP0 s      -> p"INFIXOP0" s     | INCLUDE         -> "INCLUDE"
    | IN              -> "IN"              | IF              -> "IF"
    | GREATERRBRACKET -> "GREATERRBRACKET" | GREATERRBRACE   -> "GREATERRBRACE"
    | GREATER         -> "GREATER"         | FUNCTOR         -> "FUNCTOR"
    | FUNCTION        -> "FUNCTION"        | FUN             -> "FUN"
    | FOR_LWT         -> "FOR_LWT"         | FOR             -> "FOR"
    | FLOAT _         -> "FLOAT"           | FINALLY_LWT     -> "FINALLY_LWT"
    | FALSE           -> "FALSE"           | EXTERNAL        -> "EXTERNAL"
    | EXCEPTION       -> "EXCEPTION"       | EQUAL           -> "EQUAL"
    | EOF             -> "EOF"             | END             -> "END"
    | ELSE            -> "ELSE"            | DOWNTO          -> "DOWNTO"
    | DOTDOT          -> "DOTDOT"          | DOT             -> "DOT"
    | DONE            -> "DONE"            | DO              -> "DO"
    | CONSTRAINT      -> "CONSTRAINT"      | COMMENT _       -> "COMMENT"
    | COMMA           -> "COMMA"           | COLONGREATER    -> "COLONGREATER"
    | COLONEQUAL      -> "COLONEQUAL"      | COLONCOLON      -> "COLONCOLON"
    | COLON           -> "COLON"           | CLASS           -> "CLASS"
    | CHAR _          -> "CHAR"            | BEGIN           -> "BEGIN"
    | BARRBRACKET     -> "BARRBRACKET"     | BARBAR          -> "BARBAR"
    | BAR             -> "BAR"             | BANG            -> "BANG"
    | BACKQUOTE       -> "BACKQUOTE"       | ASSERT          -> "ASSERT"
    | AS              -> "AS"              | AND             -> "AND"
    | AMPERSAND       -> "AMPERSAND"       | AMPERAMPER      -> "AMPERAMPER"
    | P4_QUOTATION           -> "P4_QUOTATION"
    | OUNIT_TEST_UNIT        -> "OUNIT_TEST_UNIT"
    | OUNIT_TEST_MODULE      -> "OUNIT_TEST_MODULE"
    | OUNIT_TEST             -> "OUNIT_TEST"
    | OUNIT_BENCH_MODULE     -> "OUNIT_BENCH_MODULE"
    | OUNIT_BENCH_INDEXED    -> "OUNIT_BENCH_INDEXED"
    | OUNIT_BENCH_FUN        -> "OUNIT_BENCH_FUN"
    | OUNIT_BENCH            -> "OUNIT_BENCH"
    | ENTRYPOINT             -> "ENTRYPOINT"
    | PERCENT                -> "PERCENT"
    | LBRACKETPERCENTPERCENT -> "LBRACKETPERCENTPERCENT"
    | LBRACKETPERCENT        -> "LBRACKETPERCENT"
    | LBRACKETATAT           -> "LBRACKETATAT"
    | LBRACKETAT             -> "LBRACKETAT"
    | PLUSEQ                 -> "PLUSEQ"
    | LBRACKETATATAT         -> "LBRACKETATATAT"
    | EOL                    -> "EOL"
    | DEFAULT                -> "DEFAULT"
end

module Nonterminal =
struct
  open Asttypes
  open Parsetree

  type t = nonterminal

  let to_string = function
    | NT'with_type_binder                  _ -> "with_type_binder"
    | NT'with_constraints                  _ -> "with_constraints"
    | NT'with_constraint                   _ -> "with_constraint"
    | NT'virtual_flag                      _ -> "virtual_flag"
    | NT'value_type                        _ -> "value_type"
    | NT'value                             _ -> "value"
    | NT'val_longident                     _ -> "val_longident"
    | NT'val_ident                         _ -> "val_ident"
    | NT'typevar_list                      _ -> "typevar_list"
    | NT'type_variance                     _ -> "type_variance"
    | NT'type_parameters                   _ -> "type_parameters"
    | NT'type_parameter_list               _ -> "type_parameter_list"
    | NT'type_parameter                    _ -> "type_parameter"
    | NT'type_longident                    _ -> "type_longident"
    | NT'type_kind                         _ -> "type_kind"
    | NT'type_declarations                 _ -> "type_declarations"
    | NT'type_declaration                  _ -> "type_declaration"
    | NT'type_constraint                   _ -> "type_constraint"
    | NT'tag_field                         _ -> "tag_field"
    | NT'subtractive                       _ -> "subtractive"
    | NT'single_attr_id                    _ -> "single_attr_id"
    | NT'simple_pattern_not_ident          _ -> "simple_pattern_not_ident"
    | NT'simple_core_type_or_tuple_no_attr _ -> "simple_core_type_or_tuple_no_attr"
    | NT'simple_core_type_no_attr          _ -> "simple_core_type_no_attr"
    | NT'private_virtual_flags             _ -> "private_virtual_flags"
    | NT'post_item_attributes              _ -> "post_item_attributes"
    | NT'post_item_attribute               _ -> "post_item_attribute"
    | NT'payload                           _ -> "payload"
    | NT'parse_expression                  _ -> "parse_expression"
    | NT'opt_semi                          _ -> "opt_semi"
    | NT'opt_bar                           _ -> "opt_bar"
    | NT'module_bindings                   _ -> "module_bindings"
    | NT'module_binding_body               _ -> "module_binding_body"
    | NT'method_                           _ -> "method_"
    | NT'match_case                        _ -> "match_case"
    | NT'let_binding_                      _ -> "let_binding_"
    | NT'item_extension                    _ -> "item_extension"
    | NT'functor_args                      _ -> "functor_args"
    | NT'functor_arg_name                  _ -> "functor_arg_name"
    | NT'functor_arg                       _ -> "functor_arg"
    | NT'extension                         _ -> "extension"
    | NT'ext_attributes                    _ -> "ext_attributes"
    | NT'dummy                             _ -> "dummy"
    | NT'core_type_list_no_attr            _ -> "core_type_list_no_attr"
    | NT'attributes                        _ -> "attributes"
    | NT'attribute                         _ -> "attribute"
    | NT'attr_id                           _ -> "attr_id"
    | NT'structure_tail                    _ -> "structure_tail"
    | NT'structure_item                    _ -> "structure_item"
    | NT'structure                         _ -> "structure"
    | NT'strict_binding                    _ -> "strict_binding"
    | NT'simple_pattern                    _ -> "simple_pattern"
    | NT'simple_labeled_expr_list          _ -> "simple_labeled_expr_list"
    | NT'simple_expr                       _ -> "simple_expr"
    | NT'simple_core_type_or_tuple         _ -> "simple_core_type_or_tuple"
    | NT'simple_core_type2                 _ -> "simple_core_type2"
    | NT'simple_core_type                  _ -> "simple_core_type"
    | NT'signed_constant                   _ -> "signed_constant"
    | NT'signature_item                    _ -> "signature_item"
    | NT'signature                         _ -> "signature"
    | NT'seq_expr                          _ -> "seq_expr"
    | NT'row_field_list                    _ -> "row_field_list"
    | NT'row_field                         _ -> "row_field"
    | NT'record_expr                       _ -> "record_expr"
    | NT'rec_flag                          _ -> "rec_flag"
    | NT'private_flag                      _ -> "private_flag"
    | NT'primitive_declaration             _ -> "primitive_declaration"
    | NT'poly_type                         _ -> "poly_type"
    | NT'pattern_var                       _ -> "pattern_var"
    | NT'pattern_semi_list                 _ -> "pattern_semi_list"
    | NT'pattern_comma_list                _ -> "pattern_comma_list"
    | NT'pattern                           _ -> "pattern"
    | NT'parent_binder                     _ -> "parent_binder"
    | NT'package_type_cstrs                _ -> "package_type_cstrs"
    | NT'package_type_cstr                 _ -> "package_type_cstr"
    | NT'package_type                      _ -> "package_type"
    | NT'override_flag                     _ -> "override_flag"
    | NT'optional_type_parameters          _ -> "optional_type_parameters"
    | NT'optional_type_parameter_list      _ -> "optional_type_parameter_list"
    | NT'optional_type_parameter           _ -> "optional_type_parameter"
    | NT'opt_default                       _ -> "opt_default"
    | NT'opt_ampersand                     _ -> "opt_ampersand"
    | NT'operator                          _ -> "operator"
    | NT'name_tag_list                     _ -> "name_tag_list"
    | NT'name_tag                          _ -> "name_tag"
    | NT'mutable_flag                      _ -> "mutable_flag"
    | NT'mty_longident                     _ -> "mty_longident"
    | NT'module_type                       _ -> "module_type"
    | NT'module_rec_declarations           _ -> "module_rec_declarations"
    | NT'module_rec_declaration            _ -> "module_rec_declaration"
    | NT'module_expr                       _ -> "module_expr"
    | NT'module_declaration                _ -> "module_declaration"
    | NT'module_binding                    _ -> "module_binding"
    | NT'mod_longident                     _ -> "mod_longident"
    | NT'mod_ext_longident                 _ -> "mod_ext_longident"
    | NT'meth_list                         _ -> "meth_list"
    | NT'match_cases                       _ -> "match_cases"
    | NT'lident_list                       _ -> "lident_list"
    | NT'let_pattern                       _ -> "let_pattern"
    | NT'let_bindings                      _ -> "let_bindings"
    | NT'let_binding                       _ -> "let_binding"
    | NT'lbl_pattern_list                  _ -> "lbl_pattern_list"
    | NT'lbl_pattern                       _ -> "lbl_pattern"
    | NT'lbl_expr_list                     _ -> "lbl_expr_list"
    | NT'lbl_expr                          _ -> "lbl_expr"
    | NT'labeled_simple_pattern            _ -> "labeled_simple_pattern"
    | NT'labeled_simple_expr               _ -> "labeled_simple_expr"
    | NT'label_var                         _ -> "label_var"
    | NT'label_longident                   _ -> "label_longident"
    | NT'label_let_pattern                 _ -> "label_let_pattern"
    | NT'label_ident                       _ -> "label_ident"
    | NT'label_expr                        _ -> "label_expr"
    | NT'label_declarations                _ -> "label_declarations"
    | NT'label_declaration                 _ -> "label_declaration"
    | NT'label                             _ -> "label"
    | NT'interface                         _ -> "interface"
    | NT'implementation                    _ -> "implementation"
    | NT'ident                             _ -> "ident"
    | NT'generalized_constructor_arguments _ -> "generalized_constructor_arguments"
    | NT'fun_def                           _ -> "fun_def"
    | NT'fun_binding                       _ -> "fun_binding"
    | NT'field_expr_list                   _ -> "field_expr_list"
    | NT'field                             _ -> "field"
    | NT'expr_semi_list                    _ -> "expr_semi_list"
    | NT'expr_comma_list                   _ -> "expr_comma_list"
    | NT'expr                              _ -> "expr"
    | NT'direction_flag                    _ -> "direction_flag"
    | NT'core_type_list                    _ -> "core_type_list"
    | NT'core_type_comma_list              _ -> "core_type_comma_list"
    | NT'core_type2                        _ -> "core_type2"
    | NT'core_type                         _ -> "core_type"
    | NT'constructor_declarations          _ -> "constructor_declarations"
    | NT'constructor_declaration           _ -> "constructor_declaration"
    | NT'constraints                       _ -> "constraints"
    | NT'constrain_field                   _ -> "constrain_field"
    | NT'constrain                         _ -> "constrain"
    | NT'constr_longident                  _ -> "constr_longident"
    | NT'constr_ident                      _ -> "constr_ident"
    | NT'constant                          _ -> "constant"
    | NT'clty_longident                    _ -> "clty_longident"
    | NT'class_type_parameters             _ -> "class_type_parameters"
    | NT'class_type_declarations           _ -> "class_type_declarations"
    | NT'class_type_declaration            _ -> "class_type_declaration"
    | NT'class_type                        _ -> "class_type"
    | NT'class_structure                   _ -> "class_structure"
    | NT'class_simple_expr                 _ -> "class_simple_expr"
    | NT'class_signature                   _ -> "class_signature"
    | NT'class_sig_fields                  _ -> "class_sig_fields"
    | NT'class_sig_field                   _ -> "class_sig_field"
    | NT'class_sig_body                    _ -> "class_sig_body"
    | NT'class_self_type                   _ -> "class_self_type"
    | NT'class_self_pattern                _ -> "class_self_pattern"
    | NT'class_longident                   _ -> "class_longident"
    | NT'class_fun_def                     _ -> "class_fun_def"
    | NT'class_fun_binding                 _ -> "class_fun_binding"
    | NT'class_fields                      _ -> "class_fields"
    | NT'class_field                       _ -> "class_field"
    | NT'class_expr                        _ -> "class_expr"
    | NT'class_descriptions                _ -> "class_descriptions"
    | NT'class_description                 _ -> "class_description"
    | NT'class_declarations                _ -> "class_declarations"
    | NT'class_declaration                 _ -> "class_declaration"
    | NT'amper_type_list                   _ -> "amper_type_list"
    | NT'additive                          _ -> "additive"
    | NT'type_variable                     _ -> "NT'type_variable"
    | NT'str_type_extension                _ -> "NT'str_type_extension"
    | NT'str_extension_constructors        _ -> "NT'str_extension_constructors"
    | NT'str_exception_declaration         _ -> "NT'str_exception_declaration"
    | NT'sig_type_extension                _ -> "NT'sig_type_extension"
    | NT'sig_extension_constructors        _ -> "NT'sig_extension_constructors"
    | NT'sig_exception_declaration         _ -> "NT'sig_exception_declaration"
    | NT'optional_type_variable            _ -> "NT'optional_type_variable"
    | NT'open_statement                    _ -> "NT'open_statement"
    | NT'newtype                           _ -> "NT'newtype"
    | NT'floating_attribute                _ -> "NT'floating_attribute"
    | NT'extension_constructor_rebind      _ -> "NT'extension_constructor_rebind"
    | NT'extension_constructor_declaration _ -> "NT'extension_constructor_declaration"
    | NT'expr_open                         _ -> "NT'expr_open"

end

type t = Raw_parser.semantic_value =
  | Bottom
  | Terminal of Token.t
  | Nonterminal of Nonterminal.t

let to_string = function
  | Bottom -> "Bottom"
  | Terminal t -> Token.to_string t
  | Nonterminal nt -> Nonterminal.to_string nt
